import os
import cv2
import dlib
import numpy as np
import pickle

detector = dlib.get_frontal_face_detector()
shape_predictor = dlib.shape_predictor("shape_predictor_68_face_landmarks.dat")
face_rec_model = dlib.face_recognition_model_v1("dlib_face_recognition_resnet_model_v1.dat")

known_encodings = []
known_names = []

image_dir = "images"

for person_name in os.listdir(image_dir):
    person_path = os.path.join(image_dir, person_name)
    if not os.path.isdir(person_path):
        continue

    for image_name in os.listdir(person_path):
        image_path = os.path.join(person_path, image_name)
        image = cv2.imread(image_path)
        if image is None:
            continue

        rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
        faces = detector(rgb)

        if len(faces) == 0:
            print(f"❌ No face found in {image_path}")
            continue

        shape = shape_predictor(rgb, faces[0])
        face_encoding = np.array(face_rec_model.compute_face_descriptor(rgb, shape))

        known_encodings.append(face_encoding)
        known_names.append(person_name)
        print(f"✅ Encoded {image_name} for {person_name}")

with open("encodings.pkl", "wb") as f:
    pickle.dump((known_encodings, known_names), f)

print(f"\n✅ Finished encoding {len(known_encodings)} faces.")
